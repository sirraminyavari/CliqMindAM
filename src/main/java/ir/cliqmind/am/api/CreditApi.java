/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.17).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ir.cliqmind.am.api;

import ir.cliqmind.am.dto.*;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-11-12T12:24:22.951Z")

@Api(value = "credit", description = "the credit API")
@RequestMapping(value = "/api/v1")
@CrossOrigin(origins = "*")
public interface CreditApi {

    @ApiOperation(value = "Get Credit Balance", nickname = "getCreditBalance", notes = "This can only be done by the unknown user.", response = GetCreditBalanceResponse.class, tags={ "credit", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful credet balance returned", response = GetCreditBalanceResponse.class),
        @ApiResponse(code = 400, message = "Invalid request format "),
        @ApiResponse(code = 401, message = "Authorization error") })
    @RequestMapping(value = "/credit/balance/get",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<GetCreditBalanceResponse> getCreditBalance(@ApiParam(value = "get credit balance" ,required=true )  @Valid @RequestBody GetCreditBalanceRequest body);


    @ApiOperation(value = "Transfer Credit", nickname = "transferBalance", notes = "This can only be done by the unknown user.", response = Transaction.class, tags={ "credit", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful credit transfered", response = Transaction.class),
        @ApiResponse(code = 400, message = "Invalid request format "),
        @ApiResponse(code = 401, message = "Authorization error") })
    @RequestMapping(value = "/credit/transfer",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Transactions> transferBalance(@ApiParam(value = "transfer credit" ,required=true )  @Valid @RequestBody TransferCreditRequest body);

}
